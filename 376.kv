#:kivy 1.0

#:import face_spot_lookup helpers.face_spot_lookup

<Die>:
    value: 1
    die_color: [0.1,0.6,0.1,1.0]
    spot_color: [0.99,0.99,0,1.0]
    size_hint: (None, None)
    spot_width: self.size[0]/5
    spot_height: self.size[1]/5
    canvas:
        Color:
            rgba: self.die_color
        Quad:
            points: [self.pos[0]+0,self.pos[1]+0, self.pos[0]+self.size[0],self.pos[1]+0, self.pos[0]+self.size[0],self.pos[1]+self.size[1], self.pos[0]+0,self.pos[1]+self.size[1]]
        #spots on the die
        Color:
            rgba: self.spot_color
        Ellipse:
            size: (self.spot_width, self.spot_height)
            pos: face_spot_lookup(self.center_x, self.center_y, self.size[0], self.size[1], self.spot_width, self.spot_height, self.value, 0)
        Ellipse:
            size: (self.spot_width, self.spot_height)
            pos: face_spot_lookup(self.center_x, self.center_y, self.size[0], self.size[1], self.spot_width, self.spot_height, self.value, 1)
        Ellipse:
            size: (self.spot_width, self.spot_height)
            pos: face_spot_lookup(self.center_x, self.center_y, self.size[0], self.size[1], self.spot_width, self.spot_height, self.value, 2)
        Ellipse:
            size: (self.spot_width, self.spot_height)
            pos: face_spot_lookup(self.center_x, self.center_y, self.size[0], self.size[1], self.spot_width, self.spot_height, self.value, 3)
        Ellipse:
            size: (self.spot_width, self.spot_height)
            pos: face_spot_lookup(self.center_x, self.center_y, self.size[0], self.size[1], self.spot_width, self.spot_height, self.value, 4)
        Ellipse:
            size: (self.spot_width, self.spot_height)
            pos: face_spot_lookup(self.center_x, self.center_y, self.size[0], self.size[1], self.spot_width, self.spot_height, self.value, 5)

<HexTile>:
    color: (0.5,0.5,0.5,1.0)
    size_hint: (None, None)
    hex_width: self.size[0]
    hex_len: self.size[0]/2
    hex_height: self.hex_len*(3**0.5)
    canvas:
        #hex is comprised of six triangles
        Color:
            rgba: self.color
        #top
        Triangle: 
            points: [self.center_x, self.center_y, self.center_x - self.hex_len/2, self.center_y - self.hex_height/2, self.center_x + self.hex_len/2, self.center_y - self.hex_height/2]
        #topright
        Triangle: 
            points: [self.center_x, self.center_y, self.center_x + self.hex_len/2, self.center_y - self.hex_height/2, self.center_x + self.hex_len, self.center_y]
        #bottomright
        Triangle: 
            points: [self.center_x, self.center_y, self.center_x + self.hex_len, self.center_y, self.center_x + self.hex_len/2, self.center_y + self.hex_height/2]
        #bottom
        Triangle: 
            points: [self.center_x, self.center_y, self.center_x + self.hex_len/2, self.center_y + self.hex_height/2, self.center_x - self.hex_len/2, self.center_y + self.hex_height/2]
        #bottomleft
        Triangle: 
            points: [self.center_x, self.center_y, self.center_x - self.hex_len/2, self.center_y + self.hex_height/2, self.center_x - self.hex_len, self.center_y]
        #topleft
        Triangle: 
            points: [self.center_x, self.center_y, self.center_x - self.hex_len, self.center_y, self.center_x - self.hex_len/2, self.center_y - self.hex_height/2]
        #border
        Color:
            rgba: (0.7,0.7,0.7,1.0)
        Line:
            points: [ self.center_x - self.hex_len/2, self.center_y - self.hex_height/2, self.center_x + self.hex_len/2, self.center_y - self.hex_height/2, self.center_x + self.hex_len, self.center_y, self.center_x + self.hex_len/2, self.center_y + self.hex_height/2, self.center_x - self.hex_len/2, self.center_y + self.hex_height/2, self.center_x - self.hex_len, self.center_y, self.center_x - self.hex_len/2, self.center_y - self.hex_height/2 ]

<PlayerScore>:
    ident: 'I'
    color: [0.0,1.0,0.0,1.0]
    score: 0
    active_turn: False
    size_hint: (None, None)
    size: (60, 80)
    pos: (0,0)
    center_score: self.center_y + (self.size[1] - self.size[0])/2
    tri_height: 0.9*(self.size[1] - self.size[0])
    hex_len: self.size[0]/2
    hex_height: self.hex_len*(3**0.5)
    canvas:
        Color:
            rgba: self.color
        Triangle:
            points: [0,0,0,0,0,0] if self.active_turn==False else [self.x,self.y, self.right,self.y, self.center_x,self.y + self.tri_height]
        Line:
            cap: 'square'
            width: 0.05 * self.size[0]
            points: [] if self.score == 0 else [self.center_x - self.hex_len/2, self.center_score - self.hex_height/2, self.center_x + self.hex_len/2, self.center_score - self.hex_height/2, self.center_x + self.hex_len, self.center_score, self.center_x + self.hex_len/2, self.center_score + self.hex_height/2, self.center_x - self.hex_len/2, self.center_score + self.hex_height/2, self.center_x - self.hex_len, self.center_score, self.center_x - self.hex_len/2, self.center_score - self.hex_height/2 ][:2+2*self.score]
    Label:
        size_hint: (None, None)
        id: label_text
        halign: 'center'
        center: (root.center_x, root.center_score)
        font_size: root.size[0]/2
        size: root.size[0]/2, root.size[0]/2
        text: str(root.score)
        color: root.color
            
<Board>:
    board_hex_count: 7
    hex_side: min(self.size[0]/(1.5 * self.board_hex_count + 1), 0.95*self.size[1]/(self.board_hex_count * 3**0.5))
    hex_width: self.hex_side*2
    hex_height: self.hex_side * (3**0.5)
    board_height: self.hex_height * self.board_hex_count
    board_width: self.hex_side * (1.5 * self.board_hex_count + 1)

<GameOver>:
    auto_dismiss: False
    size_hint: (None, None)
    title: 'Game Over'
    winner_names: ['Thomas']
    BoxLayout:
        padding: [0.1*root.size[0], 0.1*root.size[1], 0.1*root.size[0], 0.1*root.size[1]]
        spacing: 0.1*root.size[1]
        orientation: 'vertical'
        Label:
            text: root.winner_names[0]+' wins!' if len(root.winner_names)==1 else 'Draw!'
        BoxLayout:
            spacing: 0.1*root.size[0]
            orientation: 'horizontal'
            Button:
                on_press: root.on_exit()
                text: 'Exit'
            Button:
                on_press: root.on_replay()
                text: 'Play again'

<PlayerCountChooser@BoxLayout>:
    orientation: 'horizontal'
    group_id: 'count'
    value: 2*two.active + 3*three.active + 4*four.active + 5*five.active
    CheckBox:
        id: two
        group: root.group_id
        active: True
    Label:
        text: '2'
    CheckBox:
        id: three
        group: root.group_id
    Label:
        text: '3'
    CheckBox:
        id: four
        group: root.group_id
    Label:
        text: '4'
    CheckBox:
        id: five
        group: root.group_id
    Label:
        text: '5'

<PlayerChooser@BoxLayout>:
    orientation: 'horizontal'
    group_id: 'player1'
    value: 1*computer.active + 2*network.active
    CheckBox:
        id: human
        group: root.group_id
        active: True
    Label:
        text: 'Human'
    CheckBox:
        id: computer
        group: root.group_id
    Label:
        text: 'Computer'
    CheckBox:
        id: network
        group: root.group_id
    Label:
        text: 'Net Player'
        
<GameMenu>:
    w_game: game
    w_start_button: start_button
    player_count: player_count.value
    players: [player1.value, player2.value, player3.value, player4.value, player5.value]
    Screen:
        name: 'main'
        RelativeLayout:
            BoxLayout:
                size_hint: [0.5, 0.2]
                pos_hint: {'center_x':0.5, 'y':0.1}
                orientation: 'vertical'
                Button:
                    size: [0.5*root.size[0], 0.2*root.size[1]]
                    text: 'Start Game'
                    on_press: root.current ='host_game'
                Button:
                    size: [0.5*root.size[0], 0.2*root.size[1]]
                    text: 'Join Network Game'
                    on_press: root.current = 'join_game'
    Screen:
        name: 'host_game'
        RelativeLayout:
            size_hint: [0.8, 0.8]
            pos_hint: {'center_x':0.5, 'center_y':0.5}
            GridLayout:
                cols: 2
                cols_minimum: {0: 0.2}
                cols_minimum: {1: 0.2}
                Label:
                    text: 'Players'
                PlayerCountChooser:
                    id: player_count
                Label:
                    text: 'Player 1'
                PlayerChooser:
                    id: player1
                    group_id: 'player1'
                Label:
                    text: 'Player 2'
                PlayerChooser:
                    id: player2
                    group_id: 'player2'
                Label:
                    disabled: player_count.value<3
                    text: 'Player 3'
                PlayerChooser:
                    disabled: player_count.value<3
                    id: player3
                    group_id: 'player3'
                Label:
                    disabled: player_count.value<4
                    text: 'Player 4'
                PlayerChooser:
                    disabled: player_count.value<4
                    id: player4
                    group_id: 'player4'
                Label:
                    disabled: player_count.value<5
                    text: 'Player 5'
                PlayerChooser:
                    disabled: player_count.value<5
                    id: player5
                    group_id: 'player5'
                Button:
                    text: 'Back'
                    on_press: root.current = 'main'
                Button:
                    text: 'Start'
                    id: start_button
    Screen:
        name: 'join_game'
        BoxLayout:
            orientation: 'horizontal'
            Button:
                text: 'Back'
                on_press: root.current = 'main'
    Screen:
        name: 'pause'
        RelativeLayout:
            Label:
                text: 'Paused'
                font_size: 0.2*root.size[1]
                pos_hint: {'center_x':0.5, 'center_y':0.8}
                size_hint: (0.4,0.2)
            Button:
                text: 'Back to game'
                size_hint: (0.4, 0.1)
                pos_hint: {'center_x':0.5, 'center_y':0.5}
                on_press: root.current = 'game'
            Button:
                size_hint: (0.4, 0.1)
                text: 'Restart game'
                pos_hint: {'center_x':0.5, 'center_y':0.4}
                on_press: root.start_game()
            Button:
                size_hint: (0.4, 0.1)
                text: 'Exit to menu'
                pos_hint: {'center_x':0.5, 'center_y':0.3}
                on_press: root.current = 'main'
    Screen:
        name: 'game'
        id: game
